<!-- Copyright (c)  Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information. -->
<Project>
  <!-- Default values for XAML rules-->
  <ItemDefinitionGroup>
    <XamlPropertyRule>
      <Namespace>Microsoft.VisualStudio.ProjectSystem</Namespace>
      <DataAccess>IRule</DataAccess>
      <RuleInjectionClassName>ProjectProperties</RuleInjectionClassName>
      <RuleInjection>ProjectLevel</RuleInjection>
    </XamlPropertyRule>
  </ItemDefinitionGroup>

  <!-- Workaround for https://github.com/dotnet/sdk/issues/2532 -->
  <!-- This will break if we ever directly embed .xaml files with a culture in their name, and expect them to be in satelite resources -->
  <Target Name="_ForceAllResourcesToMainAssembly" AfterTargets="SplitResourcesByCulture">
    <ItemGroup>
      <EmbeddedResource Condition="'%(Extension)' == '.xaml'">
        <Culture />
        <WithCulture>false</WithCulture>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <!-- The SDK tasks will not embed things that are XamlPropertyRuleNoCodeBehind so we do it ourselves -->
  <ItemGroup>
    <EmbeddedResource Include="@(XamlPropertyRuleNoCodeBehind)">
      <LogicalName>XamlRuleToCode:%(Filename)%(Extension)</LogicalName>
      <!-- Xliff tasks _does_ support XamlPropertyRuleNoCodeBehind so we need to ensure it doesn't complain about duplicate inputs -->
      <XlfInput>false</XlfInput>
    </EmbeddedResource>
  </ItemGroup>

  <!-- We need to embed our translated files too, after they've been translated -->
  <Target Name="_EmbedTranslatedXamlFiles" AfterTargets="TranslateSourceFromXlf">
    <ItemGroup>
      <EmbeddedResource Include="@(XamlPropertyRuleTranslated)">
        <LogicalName>XamlRuleToCode:%(Filename)%(Extension)</LogicalName>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <!-- Copy common files and design targets files for testing and setup authoring purposes -->
  <Target Name="CopyCommonFilesRulesToOutputDirectory" AfterTargets="CopyFilesToOutputDirectory">

    <Copy SourceFiles="@(XamlPropertyProjectItemsSchema);@(DesignTimeTargetsFile)"
          DestinationFolder="$(VisualStudioXamlRulesDir)"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">

      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <!-- Copy translated common files for testing and setup authoring purposes -->
  <Target Name="CopyTranslatedXamlRulesToOutputDirectory" AfterTargets="CopyFilesToOutputDirectory" DependsOnTargets="TranslateSourceFromXlf">

    <Copy SourceFiles="@(XamlPropertyRuleTranslated)"
          Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(XlfSource)', 'ProjectItemsSchema'))"
          DestinationFiles="@(XamlPropertyRuleTranslated->'$(VisualStudioXamlRulesDir)%(XlfLanguage)\$([System.IO.Path]::GetFileName('%(XlfSource)'))')"
          SkipUnchangedFiles="$(SkipCopyUnchangedFiles)"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForCopyFilesToOutputDirectoryIfPossible)">

      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>
</Project>