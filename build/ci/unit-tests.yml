# Name: unit-tests
# URL: https://dev.azure.com/dnceng/public/_build?definitionId=406
#
# Responsible for validating pull requests and commits to protected branches against unit tests.

# Branches that trigger a build on commit
trigger:
  branches:
    include:
    - master
    - dev15.0.x
    - dev15.9.x
    - dev16.0.x
    - dev16.1.x
    - dev16.2.x
    - dev16.3.x
    - feature/*
  paths:
    exclude: # don't trigger the CI if only a doc file was changed
    - docs/*
    - README.md

# Branches that trigger builds on PR
pr:
  branches:
    include:
    - master
    - dev15.0.x
    - dev15.9.x
    - dev16.0.x
    - dev16.1.x
    - dev16.2.x
    - dev16.3.x
    - feature/*
  paths:
    exclude: # don't trigger the CI if only a doc file was changed
    - docs/*
    - README.md

jobs:
- job: Windows
  pool:
    name: NetCorePublic-Pool
    queue: buildpool.windows.10.amd64.vs2019.pre.open
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: $(Build.SourcesDirectory)\build.cmd /build /test /ci /sign /diagnostic /no-deploy /no-integration /no-ibc /configuration $(_configuration)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\log'
        ArtifactName: '$(_configuration) unit test logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\bin'
        ArtifactName: '$(_configuration) bin folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\VSSetup'
        ArtifactName: '$(_configuration) VSSetup folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        ArtifactName: '$(_configuration) Test Result Logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishTestResults@2
      inputs:
        testRunner: 'xUnit'
        testResultsFiles: '**/*.xml' 
        searchFolder: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        configuration: '$(_configuration)'
        publishRunAttachments: true
        failTaskOnFailedTests: true
      continueOnError: true
      condition: always()

- job: Spanish
  pool:
    name: NetCorePublic-Pool
    queue: BuildPool.Windows.10.Amd64.ES.VS2017.Open
  variables:
    _configuration: Debug
  timeoutInMinutes: 20
  steps:
    - script: $(Build.SourcesDirectory)\build.cmd /build /test /ci /diagnostic /no-sign /no-deploy /no-integration /no-ibc /clearnugetcache /configuration $(_configuration)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\log'
        ArtifactName: '$(_configuration) unit test logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\bin'
        ArtifactName: '$(_configuration) bin folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\VSSetup'
        ArtifactName: '$(_configuration) VSSetup folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        ArtifactName: '$(_configuration) Test Result Logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishTestResults@2
      inputs:
        testRunner: 'xUnit'
        testResultsFiles: '**/*.xml' 
        searchFolder: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        configuration: '$(_configuration)'
        publishRunAttachments: true
      continueOnError: true
      condition: always()
